https://western-appeal-39b.notion.site/GenTech-9-Feb-14-2024-52c38ba324654146a94cdbb76c9a7955

## Работа в команде с помощью Git/GitHub

========================== Необходимые знания ========================== 

1. Базовый порядок работы (`git add`, `git commit,` `git push`)

2. Ветки 
    - ветка - еще одна версия проекта (изолированный поток разработки)


----------------- Стратегии ветвления -----------------
1. Git Flow
2. GitHub Flow
- main/master/stable - постоянная ветка
- bugfix1/payments/login/refactor007/ticket001 - временные ветки



======================================= Базовые команды для работы с ветками =======================================

-----------------  Просмотр списка веток ----------------- 
git branch
​
-----------------  Создание новой ветки ----------------- 
git branch название_ветки
​
----------------- Переключиться на другую ветку ----------------- 
git checkout название_ветки
​
-----------------  Создать ветку и переключиться на нее ----------------- 
git checkout -b название_ветки
​
-----------------  Выгрузить ветку на GitHub ----------------- 
git push -u origin название_ветки
git push


-----------------  1. Модели совместной разработки ----------------- 

----  Модели (подход) совместной разработки ---- 

1. С доступом на запись (shared repo model)
    - лучше подходит для небольших организованных команд с приватными проектами (репо)
2. Без доступа на запись (Fork and pull model)
    - лучше подходит для проектов с открытым исходным кодом и неопределенным кругом разработчиков




-----------------  Клонирование в VS Code ----------------- 

`CTRL + SHIFT + P` → `git clone` → вставить ссылку




----------------- Порядок работы в режиме с доступом на запись ----------------- 

1. Создать новый репо или открыть имеющийся
2. Добавить членов команды (`Settings → Collaborators → Add people`)
3. Установка защиты главной ветки
4. Клонировать репозиторий (скачать на компьютер)
5. Открыть проект в любимом редакторе
6. Создать отдельную ветку под задачу (”черновик”)
    - `git checkout -b andreibakhtinov/hello_file main`
7. Внести правки (изменения) в проект согласно задачи
8. Сохранение изменений (выполнить коммит)
    - `git add .`
    - `git commit -m 'описание изменений'`
9. Выгрузить ветку (правки) на GitHub
    - `git push -u origin andreibakhtinov/hello_file`
10. Оформить запрос на проверку кода (запрос на слияние, Pull Request, PR)
11. Проверить запросы (PR) коллег
12. (доп/шаг) Выгрузить изменения с GitHub себе на компьютер
    - `git checkout main` (переключиться на ветку `main`)
    - `git pull` (скачать изменения)



-------------------  Порядок действий в случае, когда задачу PR требуется изменить ----------------- 

1. Внести требуемые правки (исходя из замечаний коллег)
2. Сохранить их и выгрузить на GitHub
3. Уведомить коллег о необходимости повторной проверки PR